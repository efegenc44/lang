module Main

import Inter

variant Unit {
    Unit

    fun add(this, that : Unit) : Unit = that

    fun eq(this, that : Unit) : Inter::Bool = Inter::Bool::True
}

variant Unit2 { Unit2 }

fun f:(T (Inter::Add))(x : T) : T = x

fun g:(T (Inter::Eq))(x : T) : T = x

fun main() : Unit = (
    (fun(x) (g(x) f(x) x.add(x)))(Unit::Unit)

    let id = fun(x) x in (
        id(Unit2::Unit2)
        id(Unit::Unit)
    )
)