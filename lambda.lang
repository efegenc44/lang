module Main

import Inter

variant Unit2 { Unit2 }

fun f:(T (Inter::Add))(x : T) : T = x

fun g:(T (Inter::Eq))(x : T) : T = x

fun main() = (
    fun(x) (
        g(x)
        Inter::Add::add(x, x)
        return Inter::Bool::True
        x.add(x)
    )

    match Inter::Bool::False {
        let .True  : return ()
        let .False : Inter::Bool::True
    }

    let id = fun(x) x in (
        id(Unit2::Unit2)
        id(())
    )
)