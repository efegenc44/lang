module Main

variant Unit    { Unit    }
variant Unit2   { Unit2   }
variant Cell(T) {
    Cell(T)
    Empty

    fun cell(this, x : T) : Cell(T) = Cell::Cell(x)
}

fun h:(T)(f : fun(T) : Cell(T), x : T) : Cell(T) = f(x)

fun h2:(T)(f : fun(Cell(T)) : Cell(Cell(T)), x : T) : Cell(Cell(T)) = f(Cell::Cell(x))

fun h3:(T, R)(f : fun(T) : Cell(R), x : T) : Cell(R) = f(x)

fun h4:(T)(f : fun(T) : Cell(T)) : Cell(T) = Cell::Empty

fun h5:(F)(x : F) : Cell(F) = Cell::Empty

fun g(u : Unit) : Cell(Unit) = Cell::Cell(u)

fun j(x : Unit) : Cell(Unit2) = Cell::Empty

fun test() : Cell(Unit) = (
    h(g, Unit::Unit)
    h(Cell::Cell, Unit::Unit)
    h(Cell::Empty.cell, Unit::Unit)

    h4(h5)

    h3(g, Unit::Unit)
    h3(Cell::Cell, Unit::Unit)
    h3(Cell::Empty.cell, Unit::Unit)
)

fun test2() : Cell(Unit2) = (
    h3(j, Unit::Unit)
    h(Cell::Cell, Unit2::Unit2)
)

fun test3() : Cell(Cell(Unit)) = h2(Cell::Cell(Cell::Empty).cell, Unit::Unit)

fun main() : Unit = Unit::Unit