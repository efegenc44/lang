module Numbers::Nat

import Numbers (Nat (Nat (Succ, Zero)))
import Interfaces (Bool (True, False))

variant Nat {
    Zero
    Succ(Nat)

    fun add(this, that : Nat) : Nat = match that {
        let .Zero    : this
        let .Succ(n) : Succ(this.add(n))
    }

    fun mul(this, that : Nat) : Nat = match that {
        let .Zero    : Zero
        let .Succ(n) : this.add(this.mul(n))
    }

    fun eq(this, that : Nat) : Bool =
        match this {
            let .Zero    : match that {
                let .Zero    : True
                let .Succ(m) : False
            }
            let .Succ(n) : match that {
                let .Zero    : False
                let .Succ(m) : n.eq(m)
            }
        }
}

fun inc(n : Nat) : Nat = Succ(n)